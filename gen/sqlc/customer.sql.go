// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: customer.sql

package db

import (
	"context"

	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

const createCustomer = `-- name: CreateCustomer :one
INSERT INTO "Customer" (id, book_id, name, phone, mobile, address, ai_report, user_report)
VALUES ($1, $2, $3, $4, $5, $6, $7, $8)
RETURNING id, book_id, name, phone, mobile, address, ai_report, user_report, created_at
`

type CreateCustomerParams struct {
	ID         uuid.UUID   `json:"id"`
	BookID     uuid.UUID   `json:"book_id"`
	Name       pgtype.Text `json:"name"`
	Phone      pgtype.Text `json:"phone"`
	Mobile     pgtype.Text `json:"mobile"`
	Address    pgtype.Text `json:"address"`
	AiReport   pgtype.Text `json:"ai_report"`
	UserReport pgtype.Text `json:"user_report"`
}

func (q *Queries) CreateCustomer(ctx context.Context, arg CreateCustomerParams) (Customer, error) {
	row := q.db.QueryRow(ctx, createCustomer,
		arg.ID,
		arg.BookID,
		arg.Name,
		arg.Phone,
		arg.Mobile,
		arg.Address,
		arg.AiReport,
		arg.UserReport,
	)
	var i Customer
	err := row.Scan(
		&i.ID,
		&i.BookID,
		&i.Name,
		&i.Phone,
		&i.Mobile,
		&i.Address,
		&i.AiReport,
		&i.UserReport,
		&i.CreatedAt,
	)
	return i, err
}
