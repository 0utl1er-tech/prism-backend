// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package db

import (
	"time"

	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

type Book struct {
	ID        uuid.UUID `json:"id"`
	Name      string    `json:"name"`
	CreatedAt time.Time `json:"created_at"`
}

type Call struct {
	ID        uuid.UUID `json:"id"`
	UserID    uuid.UUID `json:"user_id"`
	CreatedAt time.Time `json:"created_at"`
}

type Contact struct {
	ID        uuid.UUID   `json:"id"`
	Phone     pgtype.Text `json:"phone"`
	Mobile    pgtype.Text `json:"mobile"`
	Email     pgtype.Text `json:"email"`
	CreatedAt time.Time   `json:"created_at"`
}

type Customer struct {
	ID       uuid.UUID   `json:"id"`
	BookID   uuid.UUID   `json:"book_id"`
	Name     pgtype.Text `json:"name"`
	Phone    pgtype.Text `json:"phone"`
	Mobile   pgtype.Text `json:"mobile"`
	Address  pgtype.Text `json:"address"`
	AiReport pgtype.Text `json:"ai_report"`
	// ユーザーによるチューニング
	UserReport pgtype.Text `json:"user_report"`
	CreatedAt  time.Time   `json:"created_at"`
}

type Session struct {
	ID           uuid.UUID `json:"id"`
	UserID       uuid.UUID `json:"user_id"`
	RefreshToken string    `json:"refresh_token"`
	UserAgent    string    `json:"user_agent"`
	ClientIp     string    `json:"client_ip"`
	IsBlocked    bool      `json:"is_blocked"`
	ExpiresAt    time.Time `json:"expires_at"`
	CreatedAt    time.Time `json:"created_at"`
}

type Status struct {
	ID uuid.UUID `json:"id"`
	// 有効数としてカウントするか
	Effective pgtype.Bool `json:"effective"`
	// NG
	Ng pgtype.Bool `json:"ng"`
}

type User struct {
	ID        uuid.UUID `json:"id"`
	Email     string    `json:"email"`
	Name      string    `json:"name"`
	Password  string    `json:"password"`
	CreatedAt time.Time `json:"created_at"`
}
